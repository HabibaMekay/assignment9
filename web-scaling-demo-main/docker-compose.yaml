version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  app1:
    build: ./app
    container_name: app1
    ports:
      - 3000:8080
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - SERVER_NUMBER=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEATHER_API_URL=https://api.open-meteo.com/v1/forecast
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network

  app2:
    build: ./app
    container_name: app2
    ports:
      - 3001:8080
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - SERVER_NUMBER=2
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEATHER_API_URL=https://api.open-meteo.com/v1/forecast
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network


  app3:
    build: ./app
    container_name: app3
    ports:
      - 3002:8080
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - SERVER_NUMBER=3
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEATHER_API_URL=https://api.open-meteo.com/v1/forecast
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network




  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge